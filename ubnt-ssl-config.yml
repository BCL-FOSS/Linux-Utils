---
- hosts: localhost
  become: yes
  vars:
    unifi_hostname: "{{ hosturl }}"
    unifi_service: "unifi"
    unifi_dir: "/var/lib/unifi"
    java_dir: "/usr/lib/unifi"
    keystore: "{{ unifi_dir }}/keystore"
    le_mode: true
    le_live_dir: "/etc/letsencrypt/live"
    alias: "unifi"
    password: "aircontrolenterprise"

  tasks:
    - name: Determine SSL certificate file paths
      set_fact:
        priv_key: "{{ le_live_dir }}/{{ unifi_hostname }}/privkey.pem"
        chain_file: "{{ le_live_dir }}/{{ unifi_hostname }}/fullchain.pem"

    - name: Stop UniFi Controller
      service:
        name: "{{ unifi_service }}"
        state: stopped

    - name: Check if MD5 checksum exists and matches
      command: md5sum -c "{{ le_live_dir }}/{{ unifi_hostname }}/privkey.pem.md5"
      register: md5_result
      changed_when: false
      failed_when: false

    - name: Update MD5 checksum if certificate has changed
      command: md5sum "{{ priv_key }}" > "{{ le_live_dir }}/{{ unifi_hostname }}/privkey.pem.md5"
      when: md5_result.rc != 0

    - name: Ensure keystore backup exists
      copy:
        src: "{{ keystore }}"
        dest: "{{ keystore }}.orig"
        remote_src: yes
      when: not ansible_facts['files'][keystore + ".orig"] is defined

    - name: Create non-destructive backup of keystore
      copy:
        src: "{{ keystore }}"
        dest: "{{ keystore }}.bak"
        remote_src: yes
      when: ansible_facts['files'][keystore + ".orig"] is defined

    - name: Export SSL certificate to temporary PKCS12 file
      command: >
        openssl pkcs12 -export -in "{{ chain_file }}" -inkey "{{ priv_key }}"
        -out /tmp/unifi.p12 -passout pass:"{{ password }}" -name "{{ alias }}"

    - name: Remove old certificate from UniFi keystore
      command: >
        keytool -delete -alias "{{ alias }}" -keystore "{{ keystore }}"
        -deststorepass "{{ password }}"

    - name: Import new SSL certificate into UniFi keystore
      command: >
        keytool -importkeystore -srckeystore /tmp/unifi.p12 -srcstoretype PKCS12
        -srcstorepass "{{ password }}" -destkeystore "{{ keystore }}"
        -deststorepass "{{ password }}" -destkeypass "{{ password }}"
        -alias "{{ alias }}" -trustcacerts

    - name: Remove temporary files
      file:
        path: "/tmp/unifi.p12"
        state: absent

    - name: Start UniFi Controller
      service:
        name: "{{ unifi_service }}"
        state: started
